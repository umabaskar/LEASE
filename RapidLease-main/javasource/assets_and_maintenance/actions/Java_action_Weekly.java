// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package assets_and_maintenance.actions;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Java_action_Weekly extends CustomJavaAction<java.lang.Void>
{
	private java.util.Date WeeklyStartDate;
	private java.util.Date WeeklyEndDate;
	private java.util.List<IMendixObject> __DateList;
	private java.util.List<assets_and_maintenance.proxies.PreventiveSchedule> DateList;
	private java.lang.Long WeeksBetween;
	private java.util.Date SpecificDay;

	public Java_action_Weekly(IContext context, java.util.Date WeeklyStartDate, java.util.Date WeeklyEndDate, java.util.List<IMendixObject> DateList, java.lang.Long WeeksBetween, java.util.Date SpecificDay)
	{
		super(context);
		this.WeeklyStartDate = WeeklyStartDate;
		this.WeeklyEndDate = WeeklyEndDate;
		this.__DateList = DateList;
		this.WeeksBetween = WeeksBetween;
		this.SpecificDay = SpecificDay;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.DateList = new java.util.ArrayList<assets_and_maintenance.proxies.PreventiveSchedule>();
		if (__DateList != null)
			for (IMendixObject __DateListElement : __DateList)
				this.DateList.add(assets_and_maintenance.proxies.PreventiveSchedule.initialize(getContext(), __DateListElement));

		// BEGIN USER CODE
		Calendar startDate = Calendar.getInstance();
		Calendar endDate = Calendar.getInstance();
		Calendar SpecificDay = Calendar.getInstance();
		startDate.setTime(WeeklyStartDate);
		endDate.setTime(WeeklyEndDate);
		SpecificDay.setTime(this.SpecificDay);
		Date sdate = startDate.getTime();
		Date edate = endDate.getTime();
		List<Date> generatedDate = getWeeklyDates(SpecificDay,WeeksBetween,sdate,endDate);
		for (int i=0;i<DateList.size();i++) {
			DateList.get(i).setDate(generatedDate.get(i));
		}
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Java_action_Weekly";
	}

	// BEGIN EXTRA CODE
	public List<Date> getWeeklyDates(Calendar day,long weeks, Date sdate, Calendar enddate ){
		List<Date> dates = new ArrayList<Date>();
        Calendar StartDate = Calendar.getInstance();
        Calendar specDay = Calendar.getInstance();
		StartDate.setTime(sdate);
		String strDateFormat = "u";
	     SimpleDateFormat sdf = new SimpleDateFormat(strDateFormat);
	     int specificDay = Integer.parseInt(sdf.format(day.getTime()));
	    
		long weeksBetween=weeks;
		StartDate.add(Calendar.DAY_OF_MONTH,1);
		for(int i=0; i<=6;i++){
			 int startdate = Integer.parseInt(sdf.format(StartDate.getTime()));
		    if(startdate == specificDay){
		        specDay = StartDate;
		        break;
		    }
		    else{
		        StartDate.add(Calendar.DAY_OF_MONTH,1);
		    }
		}
        for(int i=0;i<weeksBetween;i++){
        	if(specDay.before(enddate) || specDay.equals(enddate)){ 
        		dates.add(specDay.getTime());
            	specDay.add(Calendar.DAY_OF_MONTH,7);
        	}
        }
	
		return(dates);
    }
	// END EXTRA CODE
}
