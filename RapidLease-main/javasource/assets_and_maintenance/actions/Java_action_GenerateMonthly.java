// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package assets_and_maintenance.actions;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Java_action_GenerateMonthly extends CustomJavaAction<java.lang.Void>
{
	private java.util.Date StartDate;
	private java.util.Date EndDate;
	private java.util.List<IMendixObject> __DateList;
	private java.util.List<assets_and_maintenance.proxies.PreventiveSchedule> DateList;
	private java.util.Date SpecificDate;

	public Java_action_GenerateMonthly(IContext context, java.util.Date StartDate, java.util.Date EndDate, java.util.List<IMendixObject> DateList, java.util.Date SpecificDate)
	{
		super(context);
		this.StartDate = StartDate;
		this.EndDate = EndDate;
		this.__DateList = DateList;
		this.SpecificDate = SpecificDate;
	}

	@java.lang.Override
	public java.lang.Void executeAction() throws Exception
	{
		this.DateList = new java.util.ArrayList<assets_and_maintenance.proxies.PreventiveSchedule>();
		if (__DateList != null)
			for (IMendixObject __DateListElement : __DateList)
				this.DateList.add(assets_and_maintenance.proxies.PreventiveSchedule.initialize(getContext(), __DateListElement));

		// BEGIN USER CODE
		Calendar specificDate = Calendar.getInstance();
		Calendar startDate = Calendar.getInstance();
		Calendar endDate = Calendar.getInstance();
		specificDate.setTime(SpecificDate);
		startDate.setTime(StartDate);
		endDate.setTime(EndDate);
		int date = specificDate.get(Calendar.DAY_OF_MONTH);
		Date sdate = startDate.getTime();
		Date edate = endDate.getTime();
		List<Date> generatedDate = monthlySchedule(date,sdate,edate);
		
		for(int i=0;i<DateList.size();i++) {
			DateList.get(i).setDate(generatedDate.get(i));
		}
		return null;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "Java_action_GenerateMonthly";
	}

	// BEGIN EXTRA CODE
	public List<Date> monthlySchedule(int targetDate, Date startdate, Date enddate) {
		List<Date> list= new ArrayList<Date>();
        int date=targetDate;
        
        Calendar startDate = Calendar.getInstance();
        Calendar endDate = Calendar.getInstance();
        Calendar newDate = Calendar.getInstance();
        startDate.setTime(startdate);
        endDate.setTime(enddate);
        int months = (endDate.get(Calendar.YEAR) - startDate.get(Calendar.YEAR))*12 + (endDate.get(Calendar.MONTH) - startDate.get(Calendar.MONTH));
        
        int year = startDate.get(Calendar.YEAR);

        if (endDate.get(Calendar.DAY_OF_MONTH) < date){
            months = months - 1;
        }

        
        int month = startDate.get(Calendar.MONTH);

        while(months != -1){
            if(month <= 11){
            
                newDate.set(year,month,date);
                Date d = newDate.getTime();
                list.add(d);
                month = month + 1;

            }
            else if(month==12) {
            month=0;
            year=year+1;
            newDate.set(year,month,date);
            Date n=newDate.getTime();
            list.add(n);
            month=month+1;
            }
            else {
            continue;
            }
            months = months - 1;
        }
        
        return list;
	}
	// END EXTRA CODE
}
